{"ast":null,"code":"var _jsxFileName = \"E:\\\\szakdolgozat\\\\ims\\\\frontend\\\\src\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./AuthProvider.jsx\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const {\n    user,\n    token,\n    handleLogout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    phone_number: \"\",\n    given_name: \"\",\n    family_name: \"\",\n    dob: \"\",\n    address: \"\",\n    password: \"\",\n    currentPassword: \"\",\n    profilePicture: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\n  const [isPhoneNumberAvailable, setIsPhoneNumberAvailable] = useState(true);\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\n  const defaultProfilePicture = \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\n  useEffect(() => {\n    // Fetch user data from the backend\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setFormData({\n            username: data.user.username,\n            email: data.user.email,\n            phone_number: data.user.phone_number || \"\",\n            given_name: data.user.given_name || \"\",\n            family_name: data.user.family_name || \"\",\n            dob: data.user.dob || \"\",\n            address: data.user.address || \"\",\n            password: \"\",\n            currentPassword: \"\",\n            profilePicture: data.user.profile_picture || defaultProfilePicture\n          });\n        } else {\n          setError(data.message);\n        }\n      } catch (err) {\n        setError(\"Error fetching user data.\");\n      }\n    };\n    fetchUserData();\n  }, [token]);\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const checkUsernameAvailability = async username => {\n    if (username === user.username) {\n      setIsUsernameAvailable(true); // Skip check if username is unchanged\n      return;\n    }\n    if (!username) {\n      setIsUsernameAvailable(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-username\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      setIsUsernameAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking username availability:\", err);\n    }\n  };\n  const checkEmailAvailability = async email => {\n    if (email === user.email) {\n      setIsEmailAvailable(true); // Skip check if email is unchanged\n      return;\n    }\n    if (!email || !validateEmail(email)) {\n      setIsEmailAvailable(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      setIsEmailAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking email availability:\", err);\n    }\n  };\n  const checkPhoneNumberAvailability = async phone_number => {\n    if (phone_number === user.phone_number) {\n      setIsPhoneNumberAvailable(true); // Skip check if phone number is unchanged\n      return;\n    }\n    if (!phone_number) {\n      setIsPhoneNumberAvailable(true); // Allow empty phone number\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-phone\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          phone_number\n        })\n      });\n      const data = await response.json();\n      setIsPhoneNumberAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking phone number availability:\", err);\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (!formData.currentPassword) {\n      setError(\"Current password is required to update your profile.\");\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      setError(\"Invalid email format.\");\n      return;\n    }\n    if (!isUsernameAvailable) {\n      setError(\"Username is already in use.\");\n      return;\n    }\n    if (!isEmailAvailable) {\n      setError(\"Email is already in use.\");\n      return;\n    }\n    if (!isPhoneNumberAvailable) {\n      setError(\"Phone number is already in use.\");\n      return;\n    }\n\n    // Set empty fields to null\n    const updatedFormData = {\n      ...formData,\n      phone_number: formData.phone_number || null,\n      given_name: formData.given_name || null,\n      family_name: formData.family_name || null,\n      dob: formData.dob || null,\n      address: formData.address || null\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFormData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(\"Profile updated successfully!\");\n\n        // Update token with new username\n        const newToken = data.token; // Assume backend returns updated token\n        localStorage.setItem(\"token\", newToken);\n        window.location.reload(); // Reload to apply new token\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Error updating profile.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Welcome, \", formData.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mx-auto mt-4\",\n      style: {\n        maxWidth: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"New Username\",\n              value: formData.username,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  username: e.target.value\n                });\n                checkUsernameAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), !formData.username && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Username cannot be empty.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), !isUsernameAvailable && formData.username && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Username is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"New Email\",\n              value: formData.email,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  email: e.target.value\n                });\n                checkEmailAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), !formData.email && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Email cannot be empty.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), !isEmailAvailable && formData.email && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Email is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Phone Number\",\n              value: formData.phone_number,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  phone_number: e.target.value\n                });\n                checkPhoneNumberAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), !isPhoneNumberAvailable && formData.phone_number && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Phone number is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Given Name\",\n              value: formData.given_name,\n              onChange: e => setFormData({\n                ...formData,\n                given_name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Family Name\",\n              value: formData.family_name,\n              onChange: e => setFormData({\n                ...formData,\n                family_name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              placeholder: \"Date of Birth\",\n              value: formData.dob,\n              onChange: e => setFormData({\n                ...formData,\n                dob: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Address\",\n              value: formData.address,\n              onChange: e => setFormData({\n                ...formData,\n                address: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Current Password\",\n              value: formData.currentPassword,\n              onChange: e => setFormData({\n                ...formData,\n                currentPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"SJJAi0A3qiQp7aaRKY7Tz+Mx7b4=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Modal","Button","Card","jsxDEV","_jsxDEV","Profile","_s","user","token","handleLogout","formData","setFormData","username","email","phone_number","given_name","family_name","dob","address","password","currentPassword","profilePicture","error","setError","success","setSuccess","isUsernameAvailable","setIsUsernameAvailable","isEmailAvailable","setIsEmailAvailable","isPhoneNumberAvailable","setIsPhoneNumberAvailable","showPicturePopup","setShowPicturePopup","tempProfilePicture","setTempProfilePicture","defaultProfilePicture","fetchUserData","response","fetch","headers","Authorization","data","json","ok","profile_picture","message","err","validateEmail","emailRegex","test","checkUsernameAvailability","method","body","JSON","stringify","available","console","checkEmailAvailability","checkPhoneNumberAvailability","handleUpdate","e","preventDefault","updatedFormData","newToken","localStorage","setItem","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","onSubmit","marginTop","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["E:/szakdolgozat/ims/frontend/src/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider.jsx\";\r\nimport { Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nfunction Profile() {\r\n  const { user, token, handleLogout } = useContext(AuthContext);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    given_name: \"\",\r\n    family_name: \"\",\r\n    dob: \"\",\r\n    address: \"\",\r\n    password: \"\",\r\n    currentPassword: \"\",\r\n    profilePicture: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\r\n  const [isPhoneNumberAvailable, setIsPhoneNumberAvailable] = useState(true);\r\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\r\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\r\n  const defaultProfilePicture =\r\n    \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\r\n\r\n  useEffect(() => {\r\n    // Fetch user data from the backend\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setFormData({\r\n            username: data.user.username,\r\n            email: data.user.email,\r\n            phone_number: data.user.phone_number || \"\",\r\n            given_name: data.user.given_name || \"\",\r\n            family_name: data.user.family_name || \"\",\r\n            dob: data.user.dob || \"\",\r\n            address: data.user.address || \"\",\r\n            password: \"\",\r\n            currentPassword: \"\",\r\n            profilePicture: data.user.profile_picture || defaultProfilePicture,\r\n          });\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching user data.\");\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [token]);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const checkUsernameAvailability = async (username) => {\r\n    if (username === user.username) {\r\n      setIsUsernameAvailable(true); // Skip check if username is unchanged\r\n      return;\r\n    }\r\n    if (!username) {\r\n      setIsUsernameAvailable(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-username\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n      const data = await response.json();\r\n      setIsUsernameAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking username availability:\", err);\r\n    }\r\n  };\r\n\r\n  const checkEmailAvailability = async (email) => {\r\n    if (email === user.email) {\r\n      setIsEmailAvailable(true); // Skip check if email is unchanged\r\n      return;\r\n    }\r\n    if (!email || !validateEmail(email)) {\r\n      setIsEmailAvailable(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-email\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const data = await response.json();\r\n      setIsEmailAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking email availability:\", err);\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumberAvailability = async (phone_number) => {\r\n    if (phone_number === user.phone_number) {\r\n      setIsPhoneNumberAvailable(true); // Skip check if phone number is unchanged\r\n      return;\r\n    }\r\n    if (!phone_number) {\r\n      setIsPhoneNumberAvailable(true); // Allow empty phone number\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-phone\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ phone_number }),\r\n      });\r\n      const data = await response.json();\r\n      setIsPhoneNumberAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking phone number availability:\", err);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!formData.currentPassword) {\r\n      setError(\"Current password is required to update your profile.\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(formData.email)) {\r\n      setError(\"Invalid email format.\");\r\n      return;\r\n    }\r\n\r\n    if (!isUsernameAvailable) {\r\n      setError(\"Username is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (!isEmailAvailable) {\r\n      setError(\"Email is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (!isPhoneNumberAvailable) {\r\n      setError(\"Phone number is already in use.\");\r\n      return;\r\n    }\r\n\r\n    // Set empty fields to null\r\n    const updatedFormData = {\r\n      ...formData,\r\n      phone_number: formData.phone_number || null,\r\n      given_name: formData.given_name || null,\r\n      family_name: formData.family_name || null,\r\n      dob: formData.dob || null,\r\n      address: formData.address || null,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(updatedFormData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSuccess(\"Profile updated successfully!\");\r\n\r\n        // Update token with new username\r\n        const newToken = data.token; // Assume backend returns updated token\r\n        localStorage.setItem(\"token\", newToken);\r\n        window.location.reload(); // Reload to apply new token\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error updating profile.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center\">Welcome, {formData.username}</h1>\r\n      <div className=\"card mx-auto mt-4\" style={{ maxWidth: \"600px\" }}>\r\n        <div className=\"card-body text-center\">\r\n          <form onSubmit={handleUpdate} style={{ marginTop: \"20px\" }}>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            {success && <p className=\"text-success\">{success}</p>}\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Username\"\r\n                value={formData.username}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, username: e.target.value });\r\n                  checkUsernameAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!formData.username && (\r\n                <small className=\"text-danger\">Username cannot be empty.</small>\r\n              )}\r\n              {!isUsernameAvailable && formData.username && (\r\n                <small className=\"text-danger\">Username is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Email\"\r\n                value={formData.email}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, email: e.target.value });\r\n                  checkEmailAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!formData.email && (\r\n                <small className=\"text-danger\">Email cannot be empty.</small>\r\n              )}\r\n              {!isEmailAvailable && formData.email && (\r\n                <small className=\"text-danger\">Email is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Phone Number\"\r\n                value={formData.phone_number}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, phone_number: e.target.value });\r\n                  checkPhoneNumberAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!isPhoneNumberAvailable && formData.phone_number && (\r\n                <small className=\"text-danger\">Phone number is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Given Name\"\r\n                value={formData.given_name}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, given_name: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Family Name\"\r\n                value={formData.family_name}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, family_name: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                placeholder=\"Date of Birth\"\r\n                value={formData.dob}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, dob: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Address\"\r\n                value={formData.address}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, address: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Current Password\"\r\n                value={formData.currentPassword}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, currentPassword: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n              Update Profile\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}