{"ast":null,"code":"var _jsxFileName = \"E:\\\\szakdolgozat\\\\ims\\\\frontend\\\\src\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./AuthProvider.jsx\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const {\n    user,\n    token,\n    handleLogout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    phone_number: \"\",\n    country_code: \"+36\",\n    // Default country code\n    given_name: \"\",\n    family_name: \"\",\n    dob: \"\",\n    address: \"\",\n    password: \"\",\n    currentPassword: \"\",\n    profilePicture: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\n  const [isPhoneNumberAvailable, setIsPhoneNumberAvailable] = useState(true);\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\n  const defaultProfilePicture = \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\n  useEffect(() => {\n    // Fetch user data from the backend\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setFormData({\n            username: data.user.username,\n            email: data.user.email,\n            phone_number: data.user.phone_number || \"\",\n            country_code: data.user.country_code || \"+36\",\n            given_name: data.user.given_name || \"\",\n            family_name: data.user.family_name || \"\",\n            dob: data.user.dob || \"\",\n            address: data.user.address || \"\",\n            password: \"\",\n            currentPassword: \"\",\n            profilePicture: data.user.profile_picture || defaultProfilePicture\n          });\n        } else {\n          setError(data.message);\n        }\n      } catch (err) {\n        setError(\"Error fetching user data.\");\n      }\n    };\n    fetchUserData();\n  }, [token]);\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const validateDOB = dob => {\n    const today = new Date();\n    const birthDate = new Date(dob);\n    const age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    const dayDiff = today.getDate() - birthDate.getDate();\n    return age > 16 || age === 16 && (monthDiff > 0 || monthDiff === 0 && dayDiff >= 0);\n  };\n  const isValidDate = dob => {\n    const [year, month, day] = dob.split(\"-\").map(Number);\n    if (year < 1925 || year > 2025) return false;\n    if (month < 1 || month > 12) return false;\n    const daysInMonth = new Date(year, month, 0).getDate();\n    return day >= 1 && day <= daysInMonth;\n  };\n  const checkUsernameAvailability = async username => {\n    if (username === user.username) {\n      setIsUsernameAvailable(true); // Skip check if username is unchanged\n      return;\n    }\n    if (!username) {\n      setIsUsernameAvailable(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-username\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      setIsUsernameAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking username availability:\", err);\n    }\n  };\n  const checkEmailAvailability = async email => {\n    if (email === user.email) {\n      setIsEmailAvailable(true); // Skip check if email is unchanged\n      return;\n    }\n    if (!email || !validateEmail(email)) {\n      setIsEmailAvailable(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      setIsEmailAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking email availability:\", err);\n    }\n  };\n  const checkPhoneNumberAvailability = async phone_number => {\n    const fullPhoneNumber = `${formData.country_code}${phone_number}`;\n    if (fullPhoneNumber === user.phone_number) {\n      setIsPhoneNumberAvailable(true); // Skip check if phone number is unchanged\n      return;\n    }\n    if (!phone_number) {\n      setIsPhoneNumberAvailable(true); // Allow empty phone number\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-phone\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          phone_number: fullPhoneNumber\n        })\n      });\n      const data = await response.json();\n      setIsPhoneNumberAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking phone number availability:\", err);\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (!formData.currentPassword) {\n      setError(\"Current password is required to update your profile.\");\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      setError(\"Invalid email format.\");\n      return;\n    }\n    if (!isUsernameAvailable) {\n      setError(\"Username is already in use.\");\n      return;\n    }\n    if (!isEmailAvailable) {\n      setError(\"Email is already in use.\");\n      return;\n    }\n    if (!isPhoneNumberAvailable) {\n      setError(\"Phone number is already in use.\");\n      return;\n    }\n    if (formData.password && !validatePassword(formData.password)) {\n      setError(\"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\");\n      return;\n    }\n    if (formData.dob && (!isValidDate(formData.dob) || !validateDOB(formData.dob))) {\n      setError(\"Invalid date of birth. Ensure you are at least 16 years old.\");\n      return;\n    }\n\n    // Set empty fields to null\n    const updatedFormData = {\n      ...formData,\n      phone_number: formData.phone_number ? `${formData.country_code}${formData.phone_number}` : null,\n      given_name: formData.given_name || null,\n      family_name: formData.family_name || null,\n      dob: formData.dob || null,\n      address: formData.address || null\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFormData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(\"Profile updated successfully!\");\n\n        // Update token with new username\n        const newToken = data.token; // Assume backend returns updated token\n        localStorage.setItem(\"token\", newToken);\n        window.location.reload(); // Reload to apply new token\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Error updating profile.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Welcome, \", formData.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mx-auto mt-4\",\n      style: {\n        maxWidth: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"New Username\",\n              value: formData.username,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  username: e.target.value\n                });\n                checkUsernameAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), !formData.username && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Username cannot be empty.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), !isUsernameAvailable && formData.username && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Username is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"New Email\",\n              value: formData.email,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  email: e.target.value\n                });\n                checkEmailAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), !formData.email && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Email cannot be empty.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), !isEmailAvailable && formData.email && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Email is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: formData.country_code,\n                onChange: e => setFormData({\n                  ...formData,\n                  country_code: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"+36\",\n                  children: \"+36 (Hungary)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"+1\",\n                  children: \"+1 (USA)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"+44\",\n                  children: \"+44 (UK)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"+49\",\n                  children: \"+49 (Germany)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Phone Number\",\n                value: formData.phone_number,\n                onChange: e => {\n                  const value = e.target.value.replace(/\\D/g, \"\"); // Allow only numbers\n                  setFormData({\n                    ...formData,\n                    phone_number: value\n                  });\n                  checkPhoneNumberAvailability(value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), !isPhoneNumberAvailable && formData.phone_number && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Phone number is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"New Password\",\n              value: formData.password,\n              onChange: e => setFormData({\n                ...formData,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), formData.password && !validatePassword(formData.password) && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Given Name\",\n              value: formData.given_name,\n              onChange: e => setFormData({\n                ...formData,\n                given_name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Family Name\",\n              value: formData.family_name,\n              onChange: e => setFormData({\n                ...formData,\n                family_name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              placeholder: \"Date of Birth\",\n              value: formData.dob,\n              onChange: e => setFormData({\n                ...formData,\n                dob: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), formData.dob && !isValidDate(formData.dob) && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Invalid date. Ensure the year is between 1925 and 2025.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), formData.dob && !validateDOB(formData.dob) && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"You must be at least 16 years old.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Address\",\n              value: formData.address,\n              onChange: e => setFormData({\n                ...formData,\n                address: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Current Password\",\n              value: formData.currentPassword,\n              onChange: e => setFormData({\n                ...formData,\n                currentPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mt-3 w-100\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showPicturePopup,\n      onHide: () => setShowPicturePopup(false),\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Change Profile Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: formData.profilePicture,\n            alt: \"Current Profile\",\n            style: {\n              width: \"100px\",\n              height: \"100px\",\n              objectFit: \"cover\",\n              margin: \"0 auto\"\n            },\n            className: \"rounded-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              placeholder: \"Paste image URL\",\n              value: tempProfilePicture,\n              onChange: e => setTempProfilePicture(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleProfilePictureChange,\n              children: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"hp7wpDgG5FXbOS9wvGxsy4wHHrk=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Modal","Button","Card","jsxDEV","_jsxDEV","Profile","_s","user","token","handleLogout","formData","setFormData","username","email","phone_number","country_code","given_name","family_name","dob","address","password","currentPassword","profilePicture","error","setError","success","setSuccess","isUsernameAvailable","setIsUsernameAvailable","isEmailAvailable","setIsEmailAvailable","isPhoneNumberAvailable","setIsPhoneNumberAvailable","showPicturePopup","setShowPicturePopup","tempProfilePicture","setTempProfilePicture","defaultProfilePicture","fetchUserData","response","fetch","headers","Authorization","data","json","ok","profile_picture","message","err","validateEmail","emailRegex","test","validatePassword","passwordRegex","validateDOB","today","Date","birthDate","age","getFullYear","monthDiff","getMonth","dayDiff","getDate","isValidDate","year","month","day","split","map","Number","daysInMonth","checkUsernameAvailability","method","body","JSON","stringify","available","console","checkEmailAvailability","checkPhoneNumberAvailability","fullPhoneNumber","handleUpdate","e","preventDefault","updatedFormData","newToken","localStorage","setItem","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","onSubmit","marginTop","type","placeholder","value","onChange","target","replace","onClick","show","onHide","centered","Header","closeButton","Title","Body","Img","variant","src","alt","width","height","objectFit","margin","handleProfilePictureChange","_c","$RefreshReg$"],"sources":["E:/szakdolgozat/ims/frontend/src/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider.jsx\";\r\nimport { Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nfunction Profile() {\r\n  const { user, token, handleLogout } = useContext(AuthContext);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    country_code: \"+36\", // Default country code\r\n    given_name: \"\",\r\n    family_name: \"\",\r\n    dob: \"\",\r\n    address: \"\",\r\n    password: \"\",\r\n    currentPassword: \"\",\r\n    profilePicture: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\r\n  const [isPhoneNumberAvailable, setIsPhoneNumberAvailable] = useState(true);\r\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\r\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\r\n  const defaultProfilePicture =\r\n    \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\r\n\r\n  useEffect(() => {\r\n    // Fetch user data from the backend\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setFormData({\r\n            username: data.user.username,\r\n            email: data.user.email,\r\n            phone_number: data.user.phone_number || \"\",\r\n            country_code: data.user.country_code || \"+36\",\r\n            given_name: data.user.given_name || \"\",\r\n            family_name: data.user.family_name || \"\",\r\n            dob: data.user.dob || \"\",\r\n            address: data.user.address || \"\",\r\n            password: \"\",\r\n            currentPassword: \"\",\r\n            profilePicture: data.user.profile_picture || defaultProfilePicture,\r\n          });\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching user data.\");\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [token]);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordRegex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const validateDOB = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n    const age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n    const dayDiff = today.getDate() - birthDate.getDate();\r\n    return (\r\n      age > 16 ||\r\n      (age === 16 && (monthDiff > 0 || (monthDiff === 0 && dayDiff >= 0)))\r\n    );\r\n  };\r\n\r\n  const isValidDate = (dob) => {\r\n    const [year, month, day] = dob.split(\"-\").map(Number);\r\n    if (year < 1925 || year > 2025) return false;\r\n    if (month < 1 || month > 12) return false;\r\n\r\n    const daysInMonth = new Date(year, month, 0).getDate();\r\n    return day >= 1 && day <= daysInMonth;\r\n  };\r\n\r\n  const checkUsernameAvailability = async (username) => {\r\n    if (username === user.username) {\r\n      setIsUsernameAvailable(true); // Skip check if username is unchanged\r\n      return;\r\n    }\r\n    if (!username) {\r\n      setIsUsernameAvailable(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-username\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n      const data = await response.json();\r\n      setIsUsernameAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking username availability:\", err);\r\n    }\r\n  };\r\n\r\n  const checkEmailAvailability = async (email) => {\r\n    if (email === user.email) {\r\n      setIsEmailAvailable(true); // Skip check if email is unchanged\r\n      return;\r\n    }\r\n    if (!email || !validateEmail(email)) {\r\n      setIsEmailAvailable(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-email\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const data = await response.json();\r\n      setIsEmailAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking email availability:\", err);\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumberAvailability = async (phone_number) => {\r\n    const fullPhoneNumber = `${formData.country_code}${phone_number}`;\r\n    if (fullPhoneNumber === user.phone_number) {\r\n      setIsPhoneNumberAvailable(true); // Skip check if phone number is unchanged\r\n      return;\r\n    }\r\n    if (!phone_number) {\r\n      setIsPhoneNumberAvailable(true); // Allow empty phone number\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-phone\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ phone_number: fullPhoneNumber }),\r\n      });\r\n      const data = await response.json();\r\n      setIsPhoneNumberAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking phone number availability:\", err);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!formData.currentPassword) {\r\n      setError(\"Current password is required to update your profile.\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(formData.email)) {\r\n      setError(\"Invalid email format.\");\r\n      return;\r\n    }\r\n\r\n    if (!isUsernameAvailable) {\r\n      setError(\"Username is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (!isEmailAvailable) {\r\n      setError(\"Email is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (!isPhoneNumberAvailable) {\r\n      setError(\"Phone number is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (formData.password && !validatePassword(formData.password)) {\r\n      setError(\r\n        \"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (formData.dob && (!isValidDate(formData.dob) || !validateDOB(formData.dob))) {\r\n      setError(\"Invalid date of birth. Ensure you are at least 16 years old.\");\r\n      return;\r\n    }\r\n\r\n    // Set empty fields to null\r\n    const updatedFormData = {\r\n      ...formData,\r\n      phone_number: formData.phone_number\r\n        ? `${formData.country_code}${formData.phone_number}`\r\n        : null,\r\n      given_name: formData.given_name || null,\r\n      family_name: formData.family_name || null,\r\n      dob: formData.dob || null,\r\n      address: formData.address || null,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(updatedFormData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSuccess(\"Profile updated successfully!\");\r\n\r\n        // Update token with new username\r\n        const newToken = data.token; // Assume backend returns updated token\r\n        localStorage.setItem(\"token\", newToken);\r\n        window.location.reload(); // Reload to apply new token\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error updating profile.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center\">Welcome, {formData.username}</h1>\r\n      <div className=\"card mx-auto mt-4\" style={{ maxWidth: \"600px\" }}>\r\n        <div className=\"card-body text-center\">\r\n          <form onSubmit={handleUpdate} style={{ marginTop: \"20px\" }}>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            {success && <p className=\"text-success\">{success}</p>}\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Username\"\r\n                value={formData.username}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, username: e.target.value });\r\n                  checkUsernameAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!formData.username && (\r\n                <small className=\"text-danger\">Username cannot be empty.</small>\r\n              )}\r\n              {!isUsernameAvailable && formData.username && (\r\n                <small className=\"text-danger\">Username is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Email\"\r\n                value={formData.email}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, email: e.target.value });\r\n                  checkEmailAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!formData.email && (\r\n                <small className=\"text-danger\">Email cannot be empty.</small>\r\n              )}\r\n              {!isEmailAvailable && formData.email && (\r\n                <small className=\"text-danger\">Email is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <div className=\"input-group\">\r\n                <select\r\n                  className=\"form-select\"\r\n                  value={formData.country_code}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, country_code: e.target.value })\r\n                  }\r\n                >\r\n                  <option value=\"+36\">+36 (Hungary)</option>\r\n                  <option value=\"+1\">+1 (USA)</option>\r\n                  <option value=\"+44\">+44 (UK)</option>\r\n                  <option value=\"+49\">+49 (Germany)</option>\r\n                  {/* Add more country codes as needed */}\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Phone Number\"\r\n                  value={formData.phone_number}\r\n                  onChange={(e) => {\r\n                    const value = e.target.value.replace(/\\D/g, \"\"); // Allow only numbers\r\n                    setFormData({ ...formData, phone_number: value });\r\n                    checkPhoneNumberAvailability(value);\r\n                  }}\r\n                />\r\n              </div>\r\n              {!isPhoneNumberAvailable && formData.phone_number && (\r\n                <small className=\"text-danger\">Phone number is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Password\"\r\n                value={formData.password}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, password: e.target.value })\r\n                }\r\n              />\r\n              {formData.password && !validatePassword(formData.password) && (\r\n                <small className=\"text-danger\">\r\n                  Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\r\n                </small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Given Name\"\r\n                value={formData.given_name}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, given_name: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Family Name\"\r\n                value={formData.family_name}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, family_name: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                placeholder=\"Date of Birth\"\r\n                value={formData.dob}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, dob: e.target.value })\r\n                }\r\n              />\r\n              {formData.dob && !isValidDate(formData.dob) && (\r\n                <small className=\"text-danger\">\r\n                  Invalid date. Ensure the year is between 1925 and 2025.\r\n                </small>\r\n              )}\r\n              {formData.dob && !validateDOB(formData.dob) && (\r\n                <small className=\"text-danger\">You must be at least 16 years old.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Address\"\r\n                value={formData.address}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, address: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Current Password\"\r\n                value={formData.currentPassword}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, currentPassword: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n              Update Profile\r\n            </button>\r\n          </form>\r\n          <button\r\n            className=\"btn btn-danger mt-3 w-100\"\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Popup for changing profile picture */}\r\n      <Modal show={showPicturePopup} onHide={() => setShowPicturePopup(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Change Profile Picture</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Card className=\"text-center\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={formData.profilePicture}\r\n              alt=\"Current Profile\"\r\n              style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\", margin: \"0 auto\" }}\r\n              className=\"rounded-circle\"\r\n            />\r\n            <Card.Body>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                placeholder=\"Paste image URL\"\r\n                value={tempProfilePicture}\r\n                onChange={(e) => setTempProfilePicture(e.target.value)}\r\n              />\r\n              <Button variant=\"primary\" onClick={handleProfilePictureChange}>\r\n                Check\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}