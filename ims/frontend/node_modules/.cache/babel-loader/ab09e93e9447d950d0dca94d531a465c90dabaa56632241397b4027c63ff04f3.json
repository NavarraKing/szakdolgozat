{"ast":null,"code":"var _jsxFileName = \"E:\\\\szakdolgozat\\\\ims\\\\frontend\\\\src\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./AuthProvider.jsx\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const {\n    user,\n    token,\n    handleLogout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    currentPassword: \"\",\n    profilePicture: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\n  const defaultProfilePicture = \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\n  useEffect(() => {\n    // Fetch user data from the backend\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setFormData({\n            username: data.user.username,\n            email: data.user.email,\n            password: \"\",\n            currentPassword: \"\",\n            profilePicture: data.user.profile_picture || defaultProfilePicture\n          });\n        } else {\n          setError(data.message);\n        }\n      } catch (err) {\n        setError(\"Error fetching user data.\");\n      }\n    };\n    fetchUserData();\n  }, [token]);\n  const validateEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const validatePassword = password => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\n  const checkUsernameAvailability = async username => {\n    if (username === formData.username) return true; // Skip check if username is unchanged\n    const response = await fetch(\"http://localhost:5000/api/check-username\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username\n      })\n    });\n    const data = await response.json();\n    setIsUsernameAvailable(data.available);\n    return data.available;\n  };\n  const checkEmailAvailability = async email => {\n    if (email === formData.email) return true; // Skip check if email is unchanged\n    const response = await fetch(\"http://localhost:5000/api/check-email\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await response.json();\n    setIsEmailAvailable(data.available);\n    return data.available;\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (!formData.currentPassword) {\n      setError(\"Current password is required to update your profile.\");\n      return;\n    }\n    if (formData.username.length < 4) {\n      setError(\"Username must be at least 4 characters long.\");\n      return;\n    }\n    if (!isUsernameAvailable) {\n      setError(\"Username is already taken.\");\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      setError(\"Invalid email format.\");\n      return;\n    }\n    if (!isEmailAvailable) {\n      setError(\"Email is already in use.\");\n      return;\n    }\n    if (formData.password && !validatePassword(formData.password)) {\n      setError(\"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(\"Profile updated successfully!\");\n      } else {\n        setError(data.message);\n      }\n    } catch {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Welcome, \", formData.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mx-auto mt-4\",\n      style: {\n        maxWidth: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"New Username\",\n              value: formData.username,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  username: e.target.value\n                });\n                checkUsernameAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), !isUsernameAvailable && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Username is already taken.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"New Email\",\n              value: formData.email,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  email: e.target.value\n                });\n                checkEmailAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), !isEmailAvailable && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Email is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"New Password (optional)\",\n              value: formData.password,\n              onChange: e => setFormData({\n                ...formData,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Current Password\",\n              value: formData.currentPassword,\n              onChange: e => setFormData({\n                ...formData,\n                currentPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mt-3 w-100\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"808rsdRl6q1KHcCJ23OtlZa/ZYU=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Modal","Button","Card","jsxDEV","_jsxDEV","Profile","_s","user","token","handleLogout","formData","setFormData","username","email","password","currentPassword","profilePicture","error","setError","success","setSuccess","isUsernameAvailable","setIsUsernameAvailable","isEmailAvailable","setIsEmailAvailable","showPicturePopup","setShowPicturePopup","tempProfilePicture","setTempProfilePicture","defaultProfilePicture","fetchUserData","response","fetch","headers","Authorization","data","json","ok","profile_picture","message","err","validateEmail","test","validatePassword","checkUsernameAvailability","method","body","JSON","stringify","available","checkEmailAvailability","handleUpdate","e","preventDefault","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["E:/szakdolgozat/ims/frontend/src/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider.jsx\";\r\nimport { Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nfunction Profile() {\r\n  const { user, token, handleLogout } = useContext(AuthContext);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    currentPassword: \"\",\r\n    profilePicture: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\r\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\r\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\r\n  const defaultProfilePicture =\r\n    \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\r\n\r\n  useEffect(() => {\r\n    // Fetch user data from the backend\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setFormData({\r\n            username: data.user.username,\r\n            email: data.user.email,\r\n            password: \"\",\r\n            currentPassword: \"\",\r\n            profilePicture: data.user.profile_picture || defaultProfilePicture,\r\n          });\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching user data.\");\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [token]);\r\n\r\n  const validateEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n\r\n  const validatePassword = (password) =>\r\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\r\n\r\n  const checkUsernameAvailability = async (username) => {\r\n    if (username === formData.username) return true; // Skip check if username is unchanged\r\n    const response = await fetch(\"http://localhost:5000/api/check-username\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username }),\r\n    });\r\n    const data = await response.json();\r\n    setIsUsernameAvailable(data.available);\r\n    return data.available;\r\n  };\r\n\r\n  const checkEmailAvailability = async (email) => {\r\n    if (email === formData.email) return true; // Skip check if email is unchanged\r\n    const response = await fetch(\"http://localhost:5000/api/check-email\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email }),\r\n    });\r\n    const data = await response.json();\r\n    setIsEmailAvailable(data.available);\r\n    return data.available;\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!formData.currentPassword) {\r\n      setError(\"Current password is required to update your profile.\");\r\n      return;\r\n    }\r\n\r\n    if (formData.username.length < 4) {\r\n      setError(\"Username must be at least 4 characters long.\");\r\n      return;\r\n    }\r\n\r\n    if (!isUsernameAvailable) {\r\n      setError(\"Username is already taken.\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(formData.email)) {\r\n      setError(\"Invalid email format.\");\r\n      return;\r\n    }\r\n\r\n    if (!isEmailAvailable) {\r\n      setError(\"Email is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (formData.password && !validatePassword(formData.password)) {\r\n      setError(\r\n        \"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSuccess(\"Profile updated successfully!\");\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch {\r\n      setError(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center\">Welcome, {formData.username}</h1>\r\n      <div className=\"card mx-auto mt-4\" style={{ maxWidth: \"600px\" }}>\r\n        <div className=\"card-body text-center\">\r\n          <form onSubmit={handleUpdate}>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            {success && <p className=\"text-success\">{success}</p>}\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Username\"\r\n                value={formData.username}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, username: e.target.value });\r\n                  checkUsernameAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!isUsernameAvailable && (\r\n                <small className=\"text-danger\">Username is already taken.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Email\"\r\n                value={formData.email}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, email: e.target.value });\r\n                  checkEmailAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!isEmailAvailable && (\r\n                <small className=\"text-danger\">Email is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Password (optional)\"\r\n                value={formData.password}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, password: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Current Password\"\r\n                value={formData.currentPassword}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, currentPassword: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n              Update Profile\r\n            </button>\r\n          </form>\r\n          <button\r\n            className=\"btn btn-danger mt-3 w-100\"\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}