{"ast":null,"code":"var _jsxFileName = \"E:\\\\szakdolgozat\\\\ims\\\\frontend\\\\src\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./AuthProvider.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const {\n    user,\n    token,\n    handleLogout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    currentPassword: \"\",\n    profilePicture: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\n  const defaultProfilePicture = \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        username: user.username,\n        email: user.email,\n        password: \"\",\n        currentPassword: \"\",\n        profilePicture: user.profilePicture || defaultProfilePicture\n      });\n    }\n  }, [user]);\n  const validateEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const validatePassword = password => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\n  const checkUsernameAvailability = async username => {\n    if (username === user.username) return true; // Skip check if username is unchanged\n    const response = await fetch(\"http://localhost:5000/api/check-username\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username\n      })\n    });\n    const data = await response.json();\n    setIsUsernameAvailable(data.available);\n    return data.available;\n  };\n  const checkEmailAvailability = async email => {\n    if (email === user.email) return true; // Skip check if email is unchanged\n    const response = await fetch(\"http://localhost:5000/api/check-email\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await response.json();\n    setIsEmailAvailable(data.available);\n    return data.available;\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (!formData.currentPassword) {\n      setError(\"Current password is required to update your profile.\");\n      return;\n    }\n    if (formData.username.length < 4) {\n      setError(\"Username must be at least 4 characters long.\");\n      return;\n    }\n    if (!isUsernameAvailable) {\n      setError(\"Username is already taken.\");\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      setError(\"Invalid email format.\");\n      return;\n    }\n    if (!isEmailAvailable) {\n      setError(\"Email is already in use.\");\n      return;\n    }\n    if (formData.password && !validatePassword(formData.password)) {\n      setError(\"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(\"Profile updated successfully!\");\n      } else {\n        setError(data.message);\n      }\n    } catch {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  const handleProfilePictureChange = e => {\n    const url = e.target.value;\n    if (url && /\\.(jpeg|jpg|gif|png)$/.test(url)) {\n      setFormData({\n        ...formData,\n        profilePicture: url\n      });\n    } else {\n      setError(\"Invalid image URL.\");\n    }\n  };\n  const resetProfilePicture = () => {\n    setFormData({\n      ...formData,\n      profilePicture: defaultProfilePicture\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mx-auto mt-4\",\n      style: {\n        maxWidth: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.profilePicture,\n            alt: \"Profile\",\n            className: \"rounded-circle mb-3\",\n            style: {\n              width: \"150px\",\n              height: \"150px\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm position-absolute\",\n            style: {\n              top: \"10px\",\n              right: \"10px\"\n            },\n            onClick: resetProfilePicture,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"New Username\",\n              value: formData.username,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  username: e.target.value\n                });\n                checkUsernameAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), !isUsernameAvailable && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Username is already taken.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"New Email\",\n              value: formData.email,\n              onChange: e => {\n                setFormData({\n                  ...formData,\n                  email: e.target.value\n                });\n                checkEmailAvailability(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), !isEmailAvailable && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Email is already in use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"New Password (optional)\",\n              value: formData.password,\n              onChange: e => setFormData({\n                ...formData,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Current Password\",\n              value: formData.currentPassword,\n              onChange: e => setFormData({\n                ...formData,\n                currentPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mt-3 w-100\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"sQHKYO4sGb9OYA7nzQr5FOVn3Ro=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","Profile","_s","user","token","handleLogout","formData","setFormData","username","email","password","currentPassword","profilePicture","error","setError","success","setSuccess","isUsernameAvailable","setIsUsernameAvailable","isEmailAvailable","setIsEmailAvailable","defaultProfilePicture","validateEmail","test","validatePassword","checkUsernameAvailability","response","fetch","method","headers","body","JSON","stringify","data","json","available","checkEmailAvailability","handleUpdate","e","preventDefault","length","Authorization","ok","message","handleProfilePictureChange","url","target","value","resetProfilePicture","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","src","alt","width","height","objectFit","top","right","onClick","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["E:/szakdolgozat/ims/frontend/src/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider.jsx\";\r\n\r\nfunction Profile() {\r\n  const { user, token, handleLogout } = useContext(AuthContext);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    currentPassword: \"\",\r\n    profilePicture: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\r\n  const defaultProfilePicture = \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFormData({\r\n        username: user.username,\r\n        email: user.email,\r\n        password: \"\",\r\n        currentPassword: \"\",\r\n        profilePicture: user.profilePicture || defaultProfilePicture,\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const validateEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n\r\n  const validatePassword = (password) =>\r\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\r\n\r\n  const checkUsernameAvailability = async (username) => {\r\n    if (username === user.username) return true; // Skip check if username is unchanged\r\n    const response = await fetch(\"http://localhost:5000/api/check-username\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username }),\r\n    });\r\n    const data = await response.json();\r\n    setIsUsernameAvailable(data.available);\r\n    return data.available;\r\n  };\r\n\r\n  const checkEmailAvailability = async (email) => {\r\n    if (email === user.email) return true; // Skip check if email is unchanged\r\n    const response = await fetch(\"http://localhost:5000/api/check-email\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email }),\r\n    });\r\n    const data = await response.json();\r\n    setIsEmailAvailable(data.available);\r\n    return data.available;\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!formData.currentPassword) {\r\n      setError(\"Current password is required to update your profile.\");\r\n      return;\r\n    }\r\n\r\n    if (formData.username.length < 4) {\r\n      setError(\"Username must be at least 4 characters long.\");\r\n      return;\r\n    }\r\n\r\n    if (!isUsernameAvailable) {\r\n      setError(\"Username is already taken.\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(formData.email)) {\r\n      setError(\"Invalid email format.\");\r\n      return;\r\n    }\r\n\r\n    if (!isEmailAvailable) {\r\n      setError(\"Email is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (formData.password && !validatePassword(formData.password)) {\r\n      setError(\r\n        \"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSuccess(\"Profile updated successfully!\");\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch {\r\n      setError(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleProfilePictureChange = (e) => {\r\n    const url = e.target.value;\r\n    if (url && /\\.(jpeg|jpg|gif|png)$/.test(url)) {\r\n      setFormData({ ...formData, profilePicture: url });\r\n    } else {\r\n      setError(\"Invalid image URL.\");\r\n    }\r\n  };\r\n\r\n  const resetProfilePicture = () => {\r\n    setFormData({ ...formData, profilePicture: defaultProfilePicture });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center\">Welcome, {user?.username}</h1>\r\n      <div className=\"card mx-auto mt-4\" style={{ maxWidth: \"600px\" }}>\r\n        <div className=\"card-body text-center\">\r\n          <div className=\"position-relative\">\r\n            <img\r\n              src={formData.profilePicture}\r\n              alt=\"Profile\"\r\n              className=\"rounded-circle mb-3\"\r\n              style={{ width: \"150px\", height: \"150px\", objectFit: \"cover\" }}\r\n            />\r\n            <button\r\n              className=\"btn btn-danger btn-sm position-absolute\"\r\n              style={{ top: \"10px\", right: \"10px\" }}\r\n              onClick={resetProfilePicture}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n          <form onSubmit={handleUpdate}>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            {success && <p className=\"text-success\">{success}</p>}\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Username\"\r\n                value={formData.username}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, username: e.target.value });\r\n                  checkUsernameAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!isUsernameAvailable && (\r\n                <small className=\"text-danger\">Username is already taken.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Email\"\r\n                value={formData.email}\r\n                onChange={(e) => {\r\n                  setFormData({ ...formData, email: e.target.value });\r\n                  checkEmailAvailability(e.target.value);\r\n                }}\r\n              />\r\n              {!isEmailAvailable && (\r\n                <small className=\"text-danger\">Email is already in use.</small>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"New Password (optional)\"\r\n                value={formData.password}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, password: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Current Password\"\r\n                value={formData.currentPassword}\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, currentPassword: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n              Update Profile\r\n            </button>\r\n          </form>\r\n          <button\r\n            className=\"btn btn-danger mt-3 w-100\"\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}