{"ast":null,"code":"var _jsxFileName = \"E:\\\\szakdolgozat\\\\ims\\\\frontend\\\\src\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./AuthProvider.jsx\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const {\n    user,\n    token,\n    handleLogout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    phone_number: \"\",\n    country_code: \"+36\",\n    // Default country code\n    given_name: \"\",\n    family_name: \"\",\n    dob: \"\",\n    address: \"\",\n    password: \"\",\n    currentPassword: \"\",\n    profilePicture: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\n  const [isPhoneNumberAvailable, setIsPhoneNumberAvailable] = useState(true);\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\n  const defaultProfilePicture = \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\n  useEffect(() => {\n    // Fetch user data from the backend\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setFormData({\n            username: data.user.username,\n            email: data.user.email,\n            phone_number: data.user.phone_number || \"\",\n            country_code: data.user.phone_number ? data.user.phone_number.slice(0, 3) : \"+36\",\n            // Extract country code if phone number exists\n            given_name: data.user.given_name || \"\",\n            family_name: data.user.family_name || \"\",\n            dob: data.user.dob || \"\",\n            address: data.user.address || \"\",\n            password: \"\",\n            currentPassword: \"\",\n            profilePicture: data.user.profile_picture || defaultProfilePicture\n          });\n        } else {\n          setError(data.message);\n        }\n      } catch (err) {\n        setError(\"Error fetching user data.\");\n      }\n    };\n    fetchUserData();\n  }, [token]);\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const validateDOB = dob => {\n    const today = new Date();\n    const birthDate = new Date(dob);\n    const age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    const dayDiff = today.getDate() - birthDate.getDate();\n    return age > 16 || age === 16 && (monthDiff > 0 || monthDiff === 0 && dayDiff >= 0);\n  };\n  const validateDOBInput = dob => {\n    const [year, month, day] = dob.split(\"-\").map(Number);\n    if (year < 1925 || year > 2025) return false;\n    if (month < 1 || month > 12) return false;\n    const daysInMonth = new Date(year, month, 0).getDate(); // Get days in the month\n    if (day < 1 || day > daysInMonth) return false;\n    return true;\n  };\n  const checkUsernameAvailability = async username => {\n    if (username === user.username) {\n      setIsUsernameAvailable(true); // Skip check if username is unchanged\n      return;\n    }\n    if (!username) {\n      setIsUsernameAvailable(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-username\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      setIsUsernameAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking username availability:\", err);\n    }\n  };\n  const checkEmailAvailability = async email => {\n    if (email === user.email) {\n      setIsEmailAvailable(true); // Skip check if email is unchanged\n      return;\n    }\n    if (!email || !validateEmail(email)) {\n      setIsEmailAvailable(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      setIsEmailAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking email availability:\", err);\n    }\n  };\n  const checkPhoneNumberAvailability = async phone_number => {\n    if (phone_number === user.phone_number) {\n      setIsPhoneNumberAvailable(true); // Skip check if phone number is unchanged\n      return;\n    }\n    if (!phone_number) {\n      setIsPhoneNumberAvailable(true); // Allow empty phone number\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/check-phone\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          phone_number\n        })\n      });\n      const data = await response.json();\n      setIsPhoneNumberAvailable(data.available);\n    } catch (err) {\n      console.error(\"Error checking phone number availability:\", err);\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (!formData.currentPassword) {\n      setError(\"Current password is required to update your profile.\");\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      setError(\"Invalid email format.\");\n      return;\n    }\n    if (!isUsernameAvailable) {\n      setError(\"Username is already in use.\");\n      return;\n    }\n    if (!isEmailAvailable) {\n      setError(\"Email is already in use.\");\n      return;\n    }\n    if (!isPhoneNumberAvailable) {\n      setError(\"Phone number is already in use.\");\n      return;\n    }\n    if (formData.password && !validatePassword(formData.password)) {\n      setError(\"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\");\n      return;\n    }\n    if (formData.dob && (!validateDOB(formData.dob) || !validateDOBInput(formData.dob))) {\n      setError(\"Invalid date of birth. Ensure it is realistic and you are at least 16 years old.\");\n      return;\n    }\n\n    // Set empty fields to null and save phone number with country code\n    const updatedFormData = {\n      ...formData,\n      phone_number: formData.phone_number ? `${formData.country_code}${formData.phone_number}` : null,\n      given_name: formData.given_name || null,\n      family_name: formData.family_name || null,\n      dob: formData.dob || null,\n      address: formData.address || null\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedFormData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(\"Profile updated successfully!\");\n\n        // Update token with new username\n        const newToken = data.token; // Assume backend returns updated token\n        localStorage.setItem(\"token\", newToken);\n        window.location.reload(); // Reload to apply new token\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Error updating profile.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Welcome, \", formData.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mx-auto mt-4\",\n      style: {\n        maxWidth: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative\",\n          style: {\n            width: \"150px\",\n            height: \"150px\",\n            margin: \"0 auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.profilePicture,\n            alt: \"Profile\",\n            className: \"rounded-circle mb-3\",\n            style: {\n              width: \"150px\",\n              height: \"150px\",\n              objectFit: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), formData.profilePicture !== defaultProfilePicture && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm position-absolute\",\n            style: {\n              top: \"10px\",\n              right: \"10px\"\n            },\n            onClick: () => setFormData({\n              ...formData,\n              profilePicture: defaultProfilePicture\n            }),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-absolute d-flex justify-content-center align-items-center\",\n            style: {\n              width: \"150px\",\n              height: \"150px\",\n              top: 0,\n              left: 0,\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n              opacity: 0,\n              transition: \"opacity 0.3s\",\n              cursor: \"pointer\",\n              borderRadius: \"50%\"\n            },\n            onMouseEnter: e => e.currentTarget.style.opacity = 1,\n            onMouseLeave: e => e.currentTarget.style.opacity = 0,\n            onClick: () => setShowPicturePopup(true),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white\",\n              children: \"Change Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdate,\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              placeholder: \"Date of Birth\",\n              value: formData.dob,\n              onChange: e => setFormData({\n                ...formData,\n                dob: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), formData.dob && !validateDOBInput(formData.dob) && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: \"Invalid date. Ensure the year is between 1925 and 2025.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"hp7wpDgG5FXbOS9wvGxsy4wHHrk=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Modal","Button","Card","jsxDEV","_jsxDEV","Profile","_s","user","token","handleLogout","formData","setFormData","username","email","phone_number","country_code","given_name","family_name","dob","address","password","currentPassword","profilePicture","error","setError","success","setSuccess","isUsernameAvailable","setIsUsernameAvailable","isEmailAvailable","setIsEmailAvailable","isPhoneNumberAvailable","setIsPhoneNumberAvailable","showPicturePopup","setShowPicturePopup","tempProfilePicture","setTempProfilePicture","defaultProfilePicture","fetchUserData","response","fetch","headers","Authorization","data","json","ok","slice","profile_picture","message","err","validateEmail","emailRegex","test","validatePassword","passwordRegex","validateDOB","today","Date","birthDate","age","getFullYear","monthDiff","getMonth","dayDiff","getDate","validateDOBInput","year","month","day","split","map","Number","daysInMonth","checkUsernameAvailability","method","body","JSON","stringify","available","console","checkEmailAvailability","checkPhoneNumberAvailability","handleUpdate","e","preventDefault","updatedFormData","newToken","localStorage","setItem","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","width","height","margin","src","alt","objectFit","top","right","onClick","left","backgroundColor","opacity","transition","cursor","borderRadius","onMouseEnter","currentTarget","onMouseLeave","onSubmit","marginTop","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["E:/szakdolgozat/ims/frontend/src/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider.jsx\";\r\nimport { Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nfunction Profile() {\r\n  const { user, token, handleLogout } = useContext(AuthContext);\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    country_code: \"+36\", // Default country code\r\n    given_name: \"\",\r\n    family_name: \"\",\r\n    dob: \"\",\r\n    address: \"\",\r\n    password: \"\",\r\n    currentPassword: \"\",\r\n    profilePicture: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isUsernameAvailable, setIsUsernameAvailable] = useState(true);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(true);\r\n  const [isPhoneNumberAvailable, setIsPhoneNumberAvailable] = useState(true);\r\n  const [showPicturePopup, setShowPicturePopup] = useState(false);\r\n  const [tempProfilePicture, setTempProfilePicture] = useState(\"\");\r\n  const defaultProfilePicture =\r\n    \"https://upload.wikimedia.org/wikipedia/commons/a/ac/Default_pfp.jpg?20200418092106\";\r\n\r\n  useEffect(() => {\r\n    // Fetch user data from the backend\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setFormData({\r\n            username: data.user.username,\r\n            email: data.user.email,\r\n            phone_number: data.user.phone_number || \"\",\r\n            country_code: data.user.phone_number\r\n              ? data.user.phone_number.slice(0, 3)\r\n              : \"+36\", // Extract country code if phone number exists\r\n            given_name: data.user.given_name || \"\",\r\n            family_name: data.user.family_name || \"\",\r\n            dob: data.user.dob || \"\",\r\n            address: data.user.address || \"\",\r\n            password: \"\",\r\n            currentPassword: \"\",\r\n            profilePicture: data.user.profile_picture || defaultProfilePicture,\r\n          });\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching user data.\");\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [token]);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordRegex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const validateDOB = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob);\r\n    const age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n    const dayDiff = today.getDate() - birthDate.getDate();\r\n    return (\r\n      age > 16 ||\r\n      (age === 16 && (monthDiff > 0 || (monthDiff === 0 && dayDiff >= 0)))\r\n    );\r\n  };\r\n\r\n  const validateDOBInput = (dob) => {\r\n    const [year, month, day] = dob.split(\"-\").map(Number);\r\n    if (year < 1925 || year > 2025) return false;\r\n    if (month < 1 || month > 12) return false;\r\n\r\n    const daysInMonth = new Date(year, month, 0).getDate(); // Get days in the month\r\n    if (day < 1 || day > daysInMonth) return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  const checkUsernameAvailability = async (username) => {\r\n    if (username === user.username) {\r\n      setIsUsernameAvailable(true); // Skip check if username is unchanged\r\n      return;\r\n    }\r\n    if (!username) {\r\n      setIsUsernameAvailable(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-username\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n      const data = await response.json();\r\n      setIsUsernameAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking username availability:\", err);\r\n    }\r\n  };\r\n\r\n  const checkEmailAvailability = async (email) => {\r\n    if (email === user.email) {\r\n      setIsEmailAvailable(true); // Skip check if email is unchanged\r\n      return;\r\n    }\r\n    if (!email || !validateEmail(email)) {\r\n      setIsEmailAvailable(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-email\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const data = await response.json();\r\n      setIsEmailAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking email availability:\", err);\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumberAvailability = async (phone_number) => {\r\n    if (phone_number === user.phone_number) {\r\n      setIsPhoneNumberAvailable(true); // Skip check if phone number is unchanged\r\n      return;\r\n    }\r\n    if (!phone_number) {\r\n      setIsPhoneNumberAvailable(true); // Allow empty phone number\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/check-phone\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ phone_number }),\r\n      });\r\n      const data = await response.json();\r\n      setIsPhoneNumberAvailable(data.available);\r\n    } catch (err) {\r\n      console.error(\"Error checking phone number availability:\", err);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!formData.currentPassword) {\r\n      setError(\"Current password is required to update your profile.\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(formData.email)) {\r\n      setError(\"Invalid email format.\");\r\n      return;\r\n    }\r\n\r\n    if (!isUsernameAvailable) {\r\n      setError(\"Username is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (!isEmailAvailable) {\r\n      setError(\"Email is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (!isPhoneNumberAvailable) {\r\n      setError(\"Phone number is already in use.\");\r\n      return;\r\n    }\r\n\r\n    if (formData.password && !validatePassword(formData.password)) {\r\n      setError(\r\n        \"Password must be at least 8 characters long, include 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (formData.dob && (!validateDOB(formData.dob) || !validateDOBInput(formData.dob))) {\r\n      setError(\"Invalid date of birth. Ensure it is realistic and you are at least 16 years old.\");\r\n      return;\r\n    }\r\n\r\n    // Set empty fields to null and save phone number with country code\r\n    const updatedFormData = {\r\n      ...formData,\r\n      phone_number: formData.phone_number\r\n        ? `${formData.country_code}${formData.phone_number}`\r\n        : null,\r\n      given_name: formData.given_name || null,\r\n      family_name: formData.family_name || null,\r\n      dob: formData.dob || null,\r\n      address: formData.address || null,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/profile\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(updatedFormData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSuccess(\"Profile updated successfully!\");\r\n\r\n        // Update token with new username\r\n        const newToken = data.token; // Assume backend returns updated token\r\n        localStorage.setItem(\"token\", newToken);\r\n        window.location.reload(); // Reload to apply new token\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error updating profile.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center\">Welcome, {formData.username}</h1>\r\n      <div className=\"card mx-auto mt-4\" style={{ maxWidth: \"600px\" }}>\r\n        <div className=\"card-body text-center\">\r\n          {/* Profile Picture Section */}\r\n          <div\r\n            className=\"position-relative\"\r\n            style={{\r\n              width: \"150px\",\r\n              height: \"150px\",\r\n              margin: \"0 auto\",\r\n            }}\r\n          >\r\n            <img\r\n              src={formData.profilePicture}\r\n              alt=\"Profile\"\r\n              className=\"rounded-circle mb-3\"\r\n              style={{ width: \"150px\", height: \"150px\", objectFit: \"cover\" }}\r\n            />\r\n            {formData.profilePicture !== defaultProfilePicture && (\r\n              <button\r\n                className=\"btn btn-danger btn-sm position-absolute\"\r\n                style={{ top: \"10px\", right: \"10px\" }}\r\n                onClick={() => setFormData({ ...formData, profilePicture: defaultProfilePicture })}\r\n              >\r\n                X\r\n              </button>\r\n            )}\r\n            <div\r\n              className=\"position-absolute d-flex justify-content-center align-items-center\"\r\n              style={{\r\n                width: \"150px\",\r\n                height: \"150px\",\r\n                top: 0,\r\n                left: 0,\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n                opacity: 0,\r\n                transition: \"opacity 0.3s\",\r\n                cursor: \"pointer\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n              onMouseEnter={(e) => (e.currentTarget.style.opacity = 1)}\r\n              onMouseLeave={(e) => (e.currentTarget.style.opacity = 0)}\r\n              onClick={() => setShowPicturePopup(true)}\r\n            >\r\n              <span className=\"text-white\">Change Picture</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Form Section */}\r\n          <form onSubmit={handleUpdate} style={{ marginTop: \"20px\" }}>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            {success && <p className=\"text-success\">{success}</p>}\r\n            {/* Other input fields */}\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                placeholder=\"Date of Birth\"\r\n                value={formData.dob}\r\n                onChange={(e) => setFormData({ ...formData, dob: e.target.value })}\r\n              />\r\n              {formData.dob && !validateDOBInput(formData.dob) && (\r\n                <small className=\"text-danger\">\r\n                  Invalid date. Ensure the year is between 1925 and 2025.\r\n                </small>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}